{"version":3,"sources":["theme.js","App.js","serviceWorker.js","index.js"],"names":["space","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","text","default","color","fontSize","caps","textTransform","letterSpacing","fontFamily","fontWeight","lineHeight","colors","background","primary","secondary","muted","styles","root","h1","h2","h3","h4","h5","h6","p","a","pre","overflowX","code","table","width","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","img","maxWidth","props","theme","Provider","value","style","fill","verticalAlign","height","padding","paddingBottom","m","sx","display","flexDirection","minHeight","as","flex","my","mt","to","variant","px","py","border","borderColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77b843e5.chunk.js","sourcesContent":["export default {\n\n  space: [\n    0,\n    4,\n    8,\n    16,\n    32,\n    64,\n    128,\n    256,\n    512\n  ],\n  fonts: {\n    body: \"Lato\",\n    heading: \"Josefin Sans\",\n    monospace: 'Menlo, monospace'\n  },\n  fontSizes: [\n    12,\n    14,\n    16,\n    20,\n    24,\n    32,\n    48,\n    64,\n    96\n  ],\n  fontWeights: {\n    body: 100,\n    heading: 700,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125\n\t},\n\ttext: {\n    default: {\n      color: 'text',\n      fontSize: 3,\n    },\n    caps: {\n      textTransform: 'uppercase',\n      letterSpacing: '0.2em',\n    },\n    heading: {\n      fontFamily: 'heading',\n      fontWeight: 'heading',\n      lineHeight: 'heading',\n    },\n  },\n  colors: {\n    text: '#99cccc',\n    background: '#333333',\n    primary: '#07c',\n    secondary: '#30c',\n    muted: '#f6f6f6'\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body'\n    },\n    h1: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 7\n    },\n    h2: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 4\n    },\n    h3: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 3\n    },\n    h4: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 2\n    },\n    h5: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 1\n    },\n    h6: {\n      color: 'text',\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      fontSize: 0\n    },\n    p: {\n      color: 'text',\n      fontFamily: 'body',\n      fontWeight: 'body',\n      lineHeight: 'body'\n    },\n    a: {\n      color: 'primary'\n    },\n    pre: {\n      fontFamily: 'monospace',\n      overflowX: 'auto',\n      code: {\n        color: 'inherit'\n      }\n    },\n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit'\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'separate',\n      borderSpacing: 0\n    },\n    th: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid'\n    },\n    td: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid'\n    },\n    img: {\n      maxWidth: '100%'\n    }\n  }\n};","/** @jsx jsx */\nimport { jsx, Box, Link, ThemeProvider, Heading, Text, Flex } from 'theme-ui'\nimport theme from './theme'\nimport './index.css'\nimport { GoLightBulb, GoStar } from 'react-icons/go';\nimport { FaLightbulb, FaStar, FaEnvelope } from 'react-icons/fa'\nimport { IconContext } from \"react-icons\";\n\nexport default props =>\n<ThemeProvider theme={theme}>\n<IconContext.Provider value={{ style: { fill:'#f89938', color: '#f89938', verticalAlign: 'middle', height:'.85em', lineHeight:'.8em', padding:'3px', paddingBottom:'6px'} }}>\n<Box m={4}>\n  <div\n    sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '80vh',\n    }}>\n    <header\n      sx={{\n        width: '100%'}}>\n        <Heading color=\"#993333\" p='1' as='h1' sx={{fontSize: '4em'}}>\n          Hello.<br/>\n        </Heading>\n        <Heading p='1' as='h2'sx={{fontSize: '3em'}}>\n          I'm Tyler.<br/>\n        </Heading>\n\n    </header>\n    <main\n      sx={{\n        width: '100%',\n        flex: '1 1',\n      }}>\n        <Box my='1'>\n                <Text color='#fff' p='1' sx={{lineHeight:'.825em', fontSize:'2em'}}>Want to make your<FaLightbulb />into a<FaStar />?</Text>\n                <Text color='#fff' p='1' sx={{lineHeight:'1em', fontSize:'2em'}}>Let's see if I can help.</Text>\n                </Box>\n                <br/>\n                <Box mt='1'>\n                <Link\n      to='/'\n      sx={{\n        variant: 'styles.navlink',\n        px: 3,\n        py: 2,\n        textTransform: 'uppercase',\n        letterSpacing: '0.1em',\n        fontWeight: '600',\n        border: '4px solid',\n        borderColor: '#ffcd34',\n        color: '#fff'\n      }}>\n      hello@humancalled.tv\n    </Link>\n    </Box>\n    </main>\n  </div>\n  </Box>\n  </IconContext.Provider>\n  </ThemeProvider>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}